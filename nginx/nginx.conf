server {
    listen 80;
    server_name _;  # 匹配所有主机名(你也可改成你的域名)

    # 前端: 当访问根路径 / 或静态资源时，反向代理到前端(容器内host:port => frontend:3000)
    location / {
        proxy_pass http://frontend:3000;
        # 或者用服务名 'frontend:3000'，要与docker-compose.yml里services的name一致
        # proxy_pass http://frontend:3000;
    }

    # 后端: 当访问 /api/... 时，反向代理到后端
    location /api/ {
        # 把 /api/ 转发到 http://backend:8080/
        # 这里如果不想带 /api 前缀，也可以做个rewrite
        proxy_pass http://backend:8080/;
        # 或者 proxy_pass http://backend:8080/;
    }
}

# 客户端请求：用户通过浏览器或其他客户端访问你的服务时，首先连接到你的电脑（如果你在本地部署的话）或者你的服务器（如果你部署在远端服务器上）。这个连接通常通过输入一个 URL 地址实现，例如 http://localhost（本地部署）或 http://your-server.com（远端服务器部署）。

# Nginx 处理请求：请求首先到达 Nginx 服务器。如果你的 Nginx 服务器和你的前端、后端服务都在同一台机器上（或同一网络环境中），Nginx 会根据其配置决定如何处理这个请求。例如，根据 URL 路径转发到前端服务或后端服务。

# 如果请求是对根目录（/）或其他静态资源，Nginx 会转发这个请求到前端服务。
# 如果请求是对 API （如 /api/something），Nginx 则会转发到后端服务。
# 服务响应：前端或后端服务处理完请求后，响应会被发送回 Nginx，然后 Nginx 将这些响应返回给请求的客户端。